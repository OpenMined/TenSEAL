name: Docker Image

on:
  push:
    branches:
      - master
  release:
    types: [created]

jobs:
  publish:
    name: Build and publish
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version:
          - 36
          - 37
          - 38
    env:
      IMAGE: openmined/tenseal

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: build image
        run: docker build -t $IMAGE -f docker-images/Dockerfile-py${{ matrix.python-version }} .

      - name: docker login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_LOGIN }} --password-stdin

      - name: tag and push latest dev images
        if: github.event_name == 'push'
        run: |
          docker tag $IMAGE $IMAGE:dev-py${{ matrix.python-version }}
          docker push $IMAGE:dev-py${{ matrix.python-version }}

      - name: push latest dev for python 3.8
        if: github.event_name == 'push' && matrix.python-version == '38'
        run: |
          docker tag $IMAGE $IMAGE:dev
          docker push $IMAGE:dev

      - name: tag and push release image
        if: github.event_name == 'release'
        run: |
          docker tag $IMAGE $IMAGE:${{ github.event.release.tag_name }}-py${{ matrix.python-version }}
          docker push $IMAGE:${{ github.event.release.tag_name }}-py${{ matrix.python-version }}

      - name: push latest stable image for python 3.8
        if: github.event_name == 'release' && matrix.python-version == '38'
        run: |
          docker tag $IMAGE $IMAGE:${{ github.event.release.tag_name }}
          docker push $IMAGE:${{ github.event.release.tag_name }}
          docker push $IMAGE:latest
